(lambda (<formal-parameters>) <body>)

(define  (plus4 x) (+ x 4))
(define plus4 (lambda (x) (+ x 4)))
;;; above just short for:
(define (plus4 x) 
	(+ x 4))
;;;bind variables with a procedure
(define (outside x y)
	(define (binder a b)
		(+
		(* x a)
		(+ y b)
		)
	)
	(binder (+ x 1) (+ y 1))
)


;;; bind variables with special form let
;;; (let (<variable> <expression>)
;;;    	 (<variable> <expression>)...
;;;	 <body>)

(define (outside x y)
	(let <name> ( (a (+ x 1))
	       (b (+ y 1)) )
	(+ (* x a) (+ y b))
	)
)

;;; let is syntactic sugar to use in place of a lambda binding expression.
	
(define (f g)
	<body>)

(f (lambda (x) (x)))
